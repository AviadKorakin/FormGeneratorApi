doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title #{title} - FormGeneratorApi
    link(rel="stylesheet", href="/stylesheets/style.css")
    link(rel="stylesheet", href="/stylesheets/builder.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css")
    link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap")
    link(rel="icon" href="/favicon.ico")

  body
    .wrapper
      header
        nav.navbar
          .container
            a.brand(href="/")
              img(src="/images/mylogo.png", alt="FormGeneratorApi Logo", class="navbar-logo")
              | FormGeneratorApi
            ul.nav-links
              li
                button.sign-in-btn(onclick="handleAuth()")
                  i.fab.fa-github
                  |  Sign In with GitHub
            ul.nav-links.tabs
              li
                a(href="/form-builder") Build Form
              li
                a(href="/update-form") Update Form
              li
                a(href="/remove-form") Remove Form
              li
                a(href="/feedbacks-viewer") View Feedbacks
              li
                a(href="/analytics-viewer") View Analytics
              li
                a(href="/users/logout") Logout
      main.container
        block content
      footer.footer
        .container
          p &copy; #{new Date().getFullYear()} FormGeneratorApi. All rights reserved.
          ul.footer-links
            li
              a(href="https://www.linkedin.com/in/aviad-korakin-477b78202")
                i.fab.fa-linkedin
            li
              a(href="https://github.com/AviadKorakin/FormGeneratorApi")
                i.fab.fa-github

    script.
      async function handleAuth() {
        try {
          console.log('Starting GitHub authentication');
          window.location.href = '/users/auth/github';
        } catch (error) {
          console.error('Authentication error:', error);
        }
      }

      async function checkUserStatus() {
        const cachedStatus = JSON.parse(localStorage.getItem('userStatus'));
        if (cachedStatus) {
          updateUI(cachedStatus);
          return;
        }

        try {
          const response = await fetch('/users/status');
          const data = await response.json();

          // Cache the status
          localStorage.setItem('userStatus', JSON.stringify(data));
          updateUI(data);
        } catch (error) {
          console.error('Error checking user status:', error);
        }
      }

      function updateUI(data) {
        if (data.loggedIn) {
          if (!data.confirmed) {
            window.location.href = '/confirmation-pending';
          } else {
            document.querySelector('.nav-links.tabs').classList.remove('hidden');
            document.querySelector('.sign-in-btn').classList.add('hidden');
          }
        } else {
          document.querySelector('.nav-links.tabs').classList.add('hidden');
          document.querySelector('.sign-in-btn').classList.remove('hidden');
        }
      }

      checkUserStatus();
