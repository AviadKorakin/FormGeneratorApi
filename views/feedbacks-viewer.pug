extends layout
block content
    h1 Feedbacks Viewer
        i.fas.fa-eye(style="margin-left: 10px; color: #3498db;")

    .container-fluid
        .row
            .row
                .row
                    // Toolbar (Left Side)
                    .col-md-4.toolbar
                        table
                            tbody
                                tr
                                    td
                                        .card.hover-card
                                            .card-header
                                                i.fas.fa-filter(style="color: #3498db; margin-right: 10px;")
                                                span(style="font-weight: bold;") Filters
                                            .card-body
                                                // Form ID Input
                                                label(for="form-id-input" style="font-weight: bold;")
                                                    i.fas.fa-file-alt(style="color: #3498db; margin-right: 5px;")
                                                    span Form ID
                                                input#form-id-input(type="text" class="form-control mt-2" placeholder="Enter Form ID")

                                                // Email Input
                                                label(for="email-input" class="mt-3" style="font-weight: bold;")
                                                    i.fas.fa-envelope(style="color: #e67e22; margin-right: 5px;")
                                                    span Email
                                                input#email-input(type="text" class="form-control mt-2" placeholder="Enter Email Address")

                                                // Date Filters
                                                label(for="start-date-input" class="mt-3" style="font-weight: bold;")
                                                    i.fas.fa-calendar-alt(style="color: #16a085; margin-right: 5px;")
                                                    span Start Date
                                                input#start-date-input(type="text" class="form-control mt-2" placeholder="Select a start date")

                                                label(for="end-date-input" class="mt-3" style="font-weight: bold;")
                                                    i.fas.fa-calendar-check(style="color: #8e44ad; margin-right: 5px;")
                                                    span End Date
                                                input#end-date-input(type="text" class="form-control mt-2" placeholder="Select a end date")

                                                // Search Button
                                                .row.mt-4
                                                    .col
                                                        span(style="visibility: hidden;") ----------------
                                                    .col.text-end
                                                        button(type="button" class="btn btn-icon search-feedbacks" data-type="search" style="font-size: 1.5rem; padding: 0; border: none; background: none;")
                                                            i.fas.fa-search(style="color: #000; font-size: 2rem;")



            // Feedbacks (Right Side)
            .col-md-8.preview
                h2
                    i.fas.fa-comments(style="margin-right: 10px; color: #3498db;")
                    span Feedbacks

                // Feedbacks Container
                #feedbacks-container
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/flatpickr")
    script.
        document.addEventListener('DOMContentLoaded', () => {
            const feedbacksContainer = document.getElementById('feedbacks-container');
            const searchButton = document.querySelector('.search-feedbacks');

            // Initialize Flatpickr for Start Date and End Date
            flatpickr('#start-date-input', {
                altInput: true,
                altFormat: 'd/m/Y', // Display format
                dateFormat: 'Y-m-d', // Backend format
                theme: 'dark', // Optional: dark mode
            });

            flatpickr('#end-date-input', {
                altInput: true,
                altFormat: 'd/m/Y', // Display format
                dateFormat: 'Y-m-d', // Backend format
                theme: 'dark', // Optional: dark mode
            });

            // Function to render stars, including fractional stars
            function renderStars(rating) {
                let starsHTML = '';
                for (let i = 1; i <= 5; i++) {
                    if (i <= Math.floor(rating)) {
                        starsHTML += '<span style="color: #f1c40f; font-size: 1.5rem;">&#9733;</span>'; // Full star
                    } else if (i === Math.ceil(rating) && rating % 1 !== 0) {
                        starsHTML += `
                            <span style="color: #f1c40f; font-size: 1.5rem; position: relative; display: inline-flex; align-items: center;">
                                <span style="display: block; width: 10px; overflow: hidden;">&#9733;</span>
                            </span>
                        `; // Half star
                    }
                }
                return starsHTML;
            }

            function renderResponses(responses) {
                let responsesHTML = '';
                const sortedResponses = Object.entries(responses)
                    .map(([question, {answer, type, order}]) => ({question, answer, type, order}))
                    .sort((a, b) => a.order - b.order);

                sortedResponses.forEach(({question, answer, type, order}, index) => {
                    let formattedAnswer;
                    switch (type) {
                        case 'textbox':
                            formattedAnswer = `<input type="text" value="${answer}" disabled style="width: 95%; margin-left: 20px; margin-right: 20px; padding: 5px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px;">`;
                            break;
                        case 'star':
                            formattedAnswer = `<div style="margin-left: 20px;">${renderStars(parseFloat(answer))}</div>`;
                            break;
                        case 'combobox':
                            formattedAnswer = `<select disabled style="width: 95%; padding: 5px; margin-top: 5px; margin-left: 20px; border: 1px solid #ccc; border-radius: 4px;"><option>${answer}</option></select>`;
                            break;
                        case 'title':
                            formattedAnswer = `<h4 style="margin-top: 5px;">${answer}</h4>`;
                            break;
                        case 'scale-bar':
                            formattedAnswer = `<div style="display: flex; align-items: center; gap: 8px; margin-top: 5px; margin-left: 20px;"><i class="fas fa-sliders-h" style="font-size: 1.5rem; color: #3498db;"></i><span style="font-weight: bold; font-size: 1rem;">${answer}</span></div>`;
                            break;
                        default:
                            formattedAnswer = `<p style="margin-top: 5px;">${answer}</p>`;
                            break;
                    }

                    responsesHTML += `<div class="response-row" style="margin-bottom: 10px;"><h4 class="question-label" style="margin-bottom: 5px; font-size: 1rem; font-weight: bold;">${index + 1}. ${question}</h4>${formattedAnswer}</div>`;
                });

                return responsesHTML;
            }

            function renderFeedbackCard(feedback) {
                return `
                    <div class="feedback-card card" style="margin-bottom: 8px">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div>
                                <div class="d-flex align-items-center" style="gap: 8px;">
                                    <i class="fas fa-user-circle" style="font-size: 2rem; color: #3498db; vertical-align: middle;"></i>
                                    <span style="font-size: 1.2rem; line-height: 1.5; vertical-align: middle;">${feedback.email}</span>
                                </div>
                                <div class="d-flex align-items-center" style="margin-top: 5px; margin-left: 20px; font-size: 1rem; gap: 8px;">
                                    <i class="fas fa-file-alt" style="color: #3498db;"></i>
                                    <span>Form #${feedback.formId}</span>
                                </div>
                            </div>
                            <button class="toggle-responses btn btn-icon" data-target="#responses-${feedback._id}" style="font-size: 1.5rem; padding: 0; border: none; background: none; margin-left: 5px;">
                                <i class="fas fa-chevron-down" style="color: #fff;"></i>
                            </button>
                        </div>
                        <div id="responses-${feedback._id}" class="card-body collapse">
                            ${renderResponses(feedback.responses)}
                        </div>
                    </div>`;
            }

            searchButton.addEventListener('click', async () => {
                const formId = document.getElementById('form-id-input').value.trim();
                const email = document.getElementById('email-input').value.trim();
                const startDate = document.getElementById('start-date-input').value.trim();
                const endDate = document.getElementById('end-date-input').value.trim();

                if (!formId && !email && !startDate && !endDate) {
                    alert('Please provide at least one filter to search.');
                    return;
                }

                try {
                    let url = '/feedbacks/filter';
                    const params = new URLSearchParams();

                    if (formId) params.append('formId', formId);
                    if (email) params.append('email', email);
                    if (startDate) params.append('startDate', startDate);
                    if (endDate) params.append('endDate', endDate);

                    url += `?${params.toString()}`;

                    const response = await fetch(url);
                    const feedbacks = await response.json();

                    feedbacksContainer.innerHTML = '';

                    if (feedbacks.length === 0) {
                        feedbacksContainer.innerHTML = '<p>No feedbacks found matching the criteria.</p>';
                        return;
                    }

                    feedbacks.forEach(feedback => {
                        feedbacksContainer.innerHTML += renderFeedbackCard(feedback);
                    });

                    document.querySelectorAll('.toggle-responses').forEach(button => {
                        button.addEventListener('click', () => {
                            const targetId = button.dataset.target;
                            const target = document.querySelector(targetId);
                            target.classList.toggle('open');
                            button.querySelector('i').classList.toggle('fa-chevron-down');
                            button.querySelector('i').classList.toggle('fa-chevron-up');
                        });
                    });
                } catch (error) {
                    console.error('Error fetching feedbacks:', error);
                    alert('Failed to fetch feedbacks. Please try again later.');
                }
            });
        });
